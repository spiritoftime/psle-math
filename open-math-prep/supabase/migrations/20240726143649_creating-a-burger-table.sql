revoke delete on table "public"."notes" from "anon";

revoke insert on table "public"."notes" from "anon";

revoke references on table "public"."notes" from "anon";

revoke select on table "public"."notes" from "anon";

revoke trigger on table "public"."notes" from "anon";

revoke truncate on table "public"."notes" from "anon";

revoke update on table "public"."notes" from "anon";

revoke delete on table "public"."notes" from "authenticated";

revoke insert on table "public"."notes" from "authenticated";

revoke references on table "public"."notes" from "authenticated";

revoke select on table "public"."notes" from "authenticated";

revoke trigger on table "public"."notes" from "authenticated";

revoke truncate on table "public"."notes" from "authenticated";

revoke update on table "public"."notes" from "authenticated";

revoke delete on table "public"."notes" from "service_role";

revoke insert on table "public"."notes" from "service_role";

revoke references on table "public"."notes" from "service_role";

revoke select on table "public"."notes" from "service_role";

revoke trigger on table "public"."notes" from "service_role";

revoke truncate on table "public"."notes" from "service_role";

revoke update on table "public"."notes" from "service_role";

alter table "public"."notes" drop constraint "notes_pkey";

drop index if exists "public"."notes_pkey";

drop table "public"."notes";

create table "public"."burgers" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text
);


alter table "public"."burgers" enable row level security;

drop sequence if exists "public"."notes_id_seq";

CREATE UNIQUE INDEX burgers_pkey ON public.burgers USING btree (id);

alter table "public"."burgers" add constraint "burgers_pkey" PRIMARY KEY using index "burgers_pkey";

grant delete on table "public"."burgers" to "anon";

grant insert on table "public"."burgers" to "anon";

grant references on table "public"."burgers" to "anon";

grant select on table "public"."burgers" to "anon";

grant trigger on table "public"."burgers" to "anon";

grant truncate on table "public"."burgers" to "anon";

grant update on table "public"."burgers" to "anon";

grant delete on table "public"."burgers" to "authenticated";

grant insert on table "public"."burgers" to "authenticated";

grant references on table "public"."burgers" to "authenticated";

grant select on table "public"."burgers" to "authenticated";

grant trigger on table "public"."burgers" to "authenticated";

grant truncate on table "public"."burgers" to "authenticated";

grant update on table "public"."burgers" to "authenticated";

grant delete on table "public"."burgers" to "service_role";

grant insert on table "public"."burgers" to "service_role";

grant references on table "public"."burgers" to "service_role";

grant select on table "public"."burgers" to "service_role";

grant trigger on table "public"."burgers" to "service_role";

grant truncate on table "public"."burgers" to "service_role";

grant update on table "public"."burgers" to "service_role";

create policy "Enable read access for all users"
on "public"."burgers"
as permissive
for select
to public
using (true);



